import abc
import enum

from aiogram import types

from database.models import User, UserRole
from utils.functions import get_all_enum_values


class ExtraButtons(str, enum.Enum):
    cancel = '–û—Ç–º–µ–Ω–∞'


class AbstractKeyBoard(metaclass=abc.ABCMeta):

    class Button(str, enum.Enum):
        pass

    extra_buttons: set[enum.Enum] = {ExtraButtons.cancel}
    accountant_buttons: set[enum.Enum] = set()

    @classmethod
    def get_values(cls) -> list[str]:
        return get_all_enum_values(cls.Button)

    @classmethod
    async def get_reply_markup(cls, user: User, *args, **kwargs) -> types.ReplyKeyboardMarkup:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True)

        exclude_set = None
        extra_set = {c.value for c in cls.extra_buttons}
        if user.role_id != UserRole.ACCOUNTANT:
            exclude_set = {c.value for c in cls.accountant_buttons}

        markup.add(*get_all_enum_values(cls.Button, except_values=exclude_set, extra_values=extra_set))
        return markup


class MainMenuKeyBoard(AbstractKeyBoard):

    class Button(str, enum.Enum):
        doc_list = "üìÑ–°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
        orders = "‚úçÔ∏é–ó–∞—è–≤–∫–∏"

        admin_manage_doc = "‚öôÔ∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏"
        admin_manage_worker = "üë∑–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—á–∏–º–∏"

    extra_buttons: set[enum.Enum] = set()
    accountant_buttons: set[enum.Enum] = {Button.admin_manage_worker, Button.admin_manage_doc}


class WorkerDetailedViewKeyBoard(AbstractKeyBoard):

    class Button(str, enum.Enum):
        delete = "üóë–£–¥–∞–ª–∏—Ç—å"
        orders = "üìÑ–ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç"


class DocumentActionKeyBoard(AbstractKeyBoard):

    class Button(str, enum.Enum):
        ask = "üìÑ–ó–∞–ø—Ä–æ—Å–∏—Ç—å"

        admin_delete = "üóë–£–¥–∞–ª–∏—Ç—å"

    accountant_buttons: set[enum.Enum] = {Button.admin_delete}


class DocumentManageActionKeyBoard(AbstractKeyBoard):

    class Button(str, enum.Enum):
        add = "‚ûï–î–æ–±–∞–≤–∏—Ç—å"
        delete = "üóë–£–¥–∞–ª–∏—Ç—å"


class WorkerManageActionKeyBoard(AbstractKeyBoard):

    class Button(str, enum.Enum):
        add_inv = "‚ûï–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ"
        delete_inv = "üóë–£–¥–∞–ª–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ"
        view_inv = "üë•‚Äç–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π"
        delete_worker = "üôÖ–£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"
        view_worker = "üë•‚Äç–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"


class WorkerManageAddInvitationRoleKeyBoard(AbstractKeyBoard):

    class Button(str, enum.Enum):
        accountant = "üßë‚Äçüíª–ë—É—Ö–≥–∞–ª—Ç–µ—Ä"
        worker = "üë∑‚Äç–°–æ—Ç—Ä—É–¥–Ω–∏–∫"


class OrderActionKeyBoard(AbstractKeyBoard):

    class Button(str, enum.Enum):
        view = "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫"


class OrderViewTypeKeyBoard(AbstractKeyBoard):

    class Button(str, enum.Enum):
        new = "–ê–∫—Ç–∏–≤–Ω—ã–µ"
        old = "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ"
        all = "–í—Å–µ"


class OrderViewToKeyBoard(AbstractKeyBoard):

    class Button(str, enum.Enum):
        to_me = "–Ø –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª"
        from_me = "–ó–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —É –º–µ–Ω—è"


class OrderDetailedViewKeyBoard(AbstractKeyBoard):

    class Button(str, enum.Enum):
        change_status = "–°–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å"


class OrderChangeStatusKeyBoard(AbstractKeyBoard):

    class Button(str, enum.Enum):
        new = '–ù–æ–≤–∞—è'
        processing = '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è'
        ready = '–ì–æ—Ç–æ–≤–∞ –∫ –≤—ã–¥–∞—á–∏'
        done = '–í—ã–ø–æ–ª–Ω–µ–Ω–∞'
        declined = '–û—Ç–º–µ–Ω–µ–Ω–∞'
